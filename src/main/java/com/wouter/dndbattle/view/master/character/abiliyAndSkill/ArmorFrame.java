/*
 * Copyright (C) 2018 wverl
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.wouter.dndbattle.view.master.character.abiliyAndSkill;

import com.wouter.dndbattle.objects.IArmor;
import com.wouter.dndbattle.objects.impl.AbstractCharacter;
import com.wouter.dndbattle.objects.impl.Armor;
import com.wouter.dndbattle.utils.Characters;

/**
 *
 * @author wverl
 */
public class ArmorFrame extends javax.swing.JFrame {

    private final AbilityAndSkillPanel abilityAndSkillPanel;
    private final IArmor armor;
    private final AbstractCharacter character;

    ArmorFrame(AbstractCharacter character, AbilityAndSkillPanel abilityAndSkillPanel) {
        this.character = character;
        this.abilityAndSkillPanel = abilityAndSkillPanel;
        if (character.getArmor() == null) {
            character.setArmor(new Armor());
        }
        this.armor = character.getArmor();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lName = new javax.swing.JLabel();
        lType = new javax.swing.JLabel();
        lRating = new javax.swing.JLabel();
        cbType = new com.wouter.dndbattle.view.comboboxes.ArmorTypeComboBox();
        sRating = new javax.swing.JSpinner();
        tfName = new javax.swing.JTextField();
        lExtraArmor = new javax.swing.JLabel();
        sExtraArmor = new javax.swing.JSpinner();
        cbShield = new javax.swing.JCheckBox();
        bSave = new javax.swing.JButton();
        bCancel = new javax.swing.JButton();
        lFiller = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        lName.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 2, 2);
        getContentPane().add(lName, gridBagConstraints);

        lType.setText("Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 2, 2);
        getContentPane().add(lType, gridBagConstraints);

        lRating.setText("Rating");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 2, 2);
        getContentPane().add(lRating, gridBagConstraints);

        cbType.setSelectedItem(armor.getArmorType());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 2, 5);
        getContentPane().add(cbType, gridBagConstraints);

        sRating.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        sRating.setValue(armor.getBaseArmorRating());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 2, 5);
        getContentPane().add(sRating, gridBagConstraints);

        tfName.setText(armor.getName());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 3, 2, 5);
        getContentPane().add(tfName, gridBagConstraints);

        lExtraArmor.setText("Extra armor from features and traits");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 2, 2);
        getContentPane().add(lExtraArmor, gridBagConstraints);

        sExtraArmor.setModel(new javax.swing.SpinnerNumberModel());
        sExtraArmor.setValue(character.getConditionalArmorBonus());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 2, 5);
        getContentPane().add(sExtraArmor, gridBagConstraints);

        cbShield.setSelected(character.isShieldWearer());
        cbShield.setText("Has a shield");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 2, 5);
        getContentPane().add(cbShield, gridBagConstraints);

        bSave.setText("Save");
        bSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 5, 5);
        getContentPane().add(bSave, gridBagConstraints);

        bCancel.setText("Cancel");
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 5, 2);
        getContentPane().add(bCancel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 5, 2);
        getContentPane().add(lFiller, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveActionPerformed
        if (armor instanceof Armor) {
            Armor armorObject = (Armor) this.armor;
            armorObject.setName(tfName.getText());
            armorObject.setArmorType(cbType.getSelectedItem());
            armorObject.setBaseArmorRating((int) sRating.getValue());
        }
        character.setConditionalArmorBonus((int) sExtraArmor.getValue());
        character.setUsingShield(cbShield.isSelected());
        Characters.getInstance().update(character);
        abilityAndSkillPanel.updatePanels();
        dispose();
    }//GEN-LAST:event_bSaveActionPerformed

    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        dispose();
    }//GEN-LAST:event_bCancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancel;
    private javax.swing.JButton bSave;
    private javax.swing.JCheckBox cbShield;
    private com.wouter.dndbattle.view.comboboxes.ArmorTypeComboBox cbType;
    private javax.swing.JLabel lExtraArmor;
    private javax.swing.JLabel lFiller;
    private javax.swing.JLabel lName;
    private javax.swing.JLabel lRating;
    private javax.swing.JLabel lType;
    private javax.swing.JSpinner sExtraArmor;
    private javax.swing.JSpinner sRating;
    private javax.swing.JTextField tfName;
    // End of variables declaration//GEN-END:variables
}
