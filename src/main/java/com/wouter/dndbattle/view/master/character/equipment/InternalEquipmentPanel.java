/*
 * Copyright (C) 2019 wverl
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.wouter.dndbattle.view.master.character.equipment;

import com.wouter.dndbattle.objects.enums.Equipment;

/**
 *
 * @author wverl
 */
public class InternalEquipmentPanel extends javax.swing.JPanel {

    private final Equipment equipment;
    private final EquipmentPanel parent;

    public InternalEquipmentPanel(Equipment equipment, EquipmentPanel parent) {
        this.equipment = equipment;
        this.parent = parent;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lName = new javax.swing.JLabel();
        lDescription = new javax.swing.JLabel();
        sAmount = new javax.swing.JSpinner();
        lWeight = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        lName.setText(equipment.getInventoryItem().getName());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(lName, gridBagConstraints);

        lDescription.setText(equipment.getInventoryItem().getDescription());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(lDescription, gridBagConstraints);

        sAmount.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        sAmount.setValue(equipment.getAmount());
        sAmount.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sAmountStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        add(sAmount, gridBagConstraints);

        lWeight.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lWeight.setText("" + (equipment.getInventoryItem().getWeight() * equipment.getAmount()));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lWeight, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void sAmountStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sAmountStateChanged
        equipment.setAmount((int) sAmount.getValue());
        lWeight.setText("" + (equipment.getInventoryItem().getWeight() * equipment.getAmount()));
        parent.calculateInventoryWeight();
        parent.save();
    }//GEN-LAST:event_sAmountStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lDescription;
    private javax.swing.JLabel lName;
    private javax.swing.JLabel lWeight;
    private javax.swing.JSpinner sAmount;
    // End of variables declaration//GEN-END:variables

    public void increaseAmount() {
        sAmount.setValue(((int) sAmount.getValue()) + 1);
    }
}
