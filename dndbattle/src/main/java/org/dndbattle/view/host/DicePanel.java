/*
 * Copyright (C) 2018 Wouter
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.dndbattle.view.host;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import javax.swing.JLabel;
import javax.swing.JSpinner;

/**
 *
 * @author Wouter
 */
public class DicePanel extends javax.swing.JPanel {

    private static final Random random = new Random();
    private final List<DiceInfo> dice = new ArrayList<>(6);

    /**
     * Creates new form DicePanel
     */
    public DicePanel() {
        initComponents();
        dice.add(new DiceInfo(4, sD4, lD4numbers, lD4total));
        dice.add(new DiceInfo(6, sD6, lD6numbers, lD6total));
        dice.add(new DiceInfo(8, sD8, lD8numbers, lD8total));
        dice.add(new DiceInfo(10, sD10, lD10numbers, lD10total));
        dice.add(new DiceInfo(12, sD12, lD12numbers, lD12total));
        dice.add(new DiceInfo(20, sD20, lD20numbers, lD20total));
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    sD4 = new javax.swing.JSpinner();
    lD4 = new javax.swing.JLabel();
    sD6 = new javax.swing.JSpinner();
    lD6 = new javax.swing.JLabel();
    sD8 = new javax.swing.JSpinner();
    lD8 = new javax.swing.JLabel();
    sD10 = new javax.swing.JSpinner();
    lD10 = new javax.swing.JLabel();
    sD12 = new javax.swing.JSpinner();
    lD12 = new javax.swing.JLabel();
    sD20 = new javax.swing.JSpinner();
    lD20 = new javax.swing.JLabel();
    lD4numbers = new javax.swing.JLabel();
    lD6numbers = new javax.swing.JLabel();
    lD8numbers = new javax.swing.JLabel();
    lD10numbers = new javax.swing.JLabel();
    lD12numbers = new javax.swing.JLabel();
    lD20numbers = new javax.swing.JLabel();
    lD4total = new javax.swing.JLabel();
    lD6total = new javax.swing.JLabel();
    lD8total = new javax.swing.JLabel();
    lD10total = new javax.swing.JLabel();
    lD12total = new javax.swing.JLabel();
    lD20total = new javax.swing.JLabel();
    lTotal = new javax.swing.JLabel();
    bThrow = new javax.swing.JButton();

    setLayout(new java.awt.GridBagLayout());

    sD4.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    add(sD4, gridBagConstraints);

    lD4.setText("d4");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 6;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 4, 0, 0);
    add(lD4, gridBagConstraints);

    sD6.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
    add(sD6, gridBagConstraints);

    lD6.setText("d6");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 6;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(9, 4, 0, 0);
    add(lD6, gridBagConstraints);

    sD8.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
    add(sD8, gridBagConstraints);

    lD8.setText("d8");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 6;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(9, 4, 0, 0);
    add(lD8, gridBagConstraints);

    sD10.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
    add(sD10, gridBagConstraints);

    lD10.setText("d10");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(9, 4, 0, 0);
    add(lD10, gridBagConstraints);

    sD12.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
    add(sD12, gridBagConstraints);

    lD12.setText("d12");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(9, 4, 0, 0);
    add(lD12, gridBagConstraints);

    sD20.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
    add(sD20, gridBagConstraints);

    lD20.setText("d20");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(9, 4, 0, 0);
    add(lD20, gridBagConstraints);

    lD4numbers.setText(" ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(3, 4, 0, 0);
    add(lD4numbers, gridBagConstraints);

    lD6numbers.setText(" ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(9, 4, 0, 0);
    add(lD6numbers, gridBagConstraints);

    lD8numbers.setText(" ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(9, 4, 0, 0);
    add(lD8numbers, gridBagConstraints);

    lD10numbers.setText(" ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(9, 4, 0, 0);
    add(lD10numbers, gridBagConstraints);

    lD12numbers.setText(" ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(9, 4, 0, 0);
    add(lD12numbers, gridBagConstraints);

    lD20numbers.setText(" ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(9, 4, 0, 0);
    add(lD20numbers, gridBagConstraints);

    lD4total.setText(" ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 6, 0, 0);
    add(lD4total, gridBagConstraints);

    lD6total.setText(" ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(9, 6, 0, 0);
    add(lD6total, gridBagConstraints);

    lD8total.setText(" ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(9, 6, 0, 0);
    add(lD8total, gridBagConstraints);

    lD10total.setText(" ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(9, 6, 0, 0);
    add(lD10total, gridBagConstraints);

    lD12total.setText(" ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(9, 6, 0, 0);
    add(lD12total, gridBagConstraints);

    lD20total.setText(" ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(9, 6, 0, 0);
    add(lD20total, gridBagConstraints);

    lTotal.setText(" ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
    add(lTotal, gridBagConstraints);

    bThrow.setText("Throw");
    bThrow.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        bThrowActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
    add(bThrow, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents

    private void bThrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bThrowActionPerformed
        int total = 0;
        total = dice.stream().map((die) -> die.throwDice()).reduce(total, Integer::sum);
        lTotal.setText(DiceInfo.TOTAL + total);
    }//GEN-LAST:event_bThrowActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton bThrow;
  private javax.swing.JLabel lD10;
  private javax.swing.JLabel lD10numbers;
  private javax.swing.JLabel lD10total;
  private javax.swing.JLabel lD12;
  private javax.swing.JLabel lD12numbers;
  private javax.swing.JLabel lD12total;
  private javax.swing.JLabel lD20;
  private javax.swing.JLabel lD20numbers;
  private javax.swing.JLabel lD20total;
  private javax.swing.JLabel lD4;
  private javax.swing.JLabel lD4numbers;
  private javax.swing.JLabel lD4total;
  private javax.swing.JLabel lD6;
  private javax.swing.JLabel lD6numbers;
  private javax.swing.JLabel lD6total;
  private javax.swing.JLabel lD8;
  private javax.swing.JLabel lD8numbers;
  private javax.swing.JLabel lD8total;
  private javax.swing.JLabel lTotal;
  private javax.swing.JSpinner sD10;
  private javax.swing.JSpinner sD12;
  private javax.swing.JSpinner sD20;
  private javax.swing.JSpinner sD4;
  private javax.swing.JSpinner sD6;
  private javax.swing.JSpinner sD8;
  // End of variables declaration//GEN-END:variables

    private static class DiceInfo {

        private static final String EMPTY = " ";
        private static final String SEPARATOR = ", ";
        private static final String TOTAL = "Total: ";

        private final int sides;
        private final JSpinner sDice;
        private final JLabel lNumbers;
        private final JLabel lTotal;

        public DiceInfo(int sides, JSpinner sDice, JLabel lNumbers, JLabel lTotal) {
            this.sides = sides;
            this.sDice = sDice;
            this.lNumbers = lNumbers;
            this.lTotal = lTotal;
        }

        private int throwDice() {
            int dice = (Integer) sDice.getValue();
            if (dice < 1) {
                lNumbers.setText(EMPTY);
                lTotal.setText(EMPTY);
                return 0;
            }
            String[] throwResults = new String[dice];
            int total = 0;
            for (int i = 0; i < throwResults.length; i++) {
                int throwResult = random.nextInt(sides) + 1;
                throwResults[i] = throwResult + "";
                total += throwResult;
            }
            lNumbers.setText(String.join(SEPARATOR, throwResults));
            lTotal.setText(TOTAL + total);
            return total;
        }
    }
}
