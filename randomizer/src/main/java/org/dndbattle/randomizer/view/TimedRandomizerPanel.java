/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.wouter.randomizer.view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.concurrent.atomic.AtomicInteger;

import javax.swing.Timer;

import com.wouter.randomizer.Main;
import com.wouter.randomizer.randomizers.TimedRandomizer;

public class TimedRandomizerPanel extends AbstractRandomizerPanel<TimedRandomizer> implements ActionListener {

  private static final String PB_STRING_FORMAT = "%d:%02dm";

  private AtomicInteger countDown = new AtomicInteger(nextCountDownValue());

  private Timer timer = new Timer(1000, this);

  public TimedRandomizerPanel(TimedRandomizer randomizer) {
    super(randomizer);
    initComponents();
    setPbTimerString();
  }

  @Override
  public void actionPerformed(ActionEvent ae) {
    int nextVal = countDown.decrementAndGet();
    if (nextVal <= 0) {
      int newTimeOut = nextCountDownValue();
      countDown.set(newTimeOut);
      pbTimer.setMaximum(countDown.get());
      setOutput(lOutput);
    }
    setPbTimerString();
  }

  private void setPbTimerString() {
    pbTimer.setValue(countDown.get());
    final int seconds = pbTimer.getValue() % 60;
    final int minutes = pbTimer.getValue() / 60;
    pbTimer.setString(String.format(PB_STRING_FORMAT, minutes, seconds));
  }

  public void stop() {
    tbRun.setSelected(false);
    if (timer.isRunning()) {
      timer.stop();
    }
  }

  public void start() {
    tbRun.setSelected(true);
    if (!timer.isRunning()) {
      timer.start();
    }
  }

  private int nextCountDownValue() {
    return getRandomizer().getRandomTimeout();
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    tbRun = new javax.swing.JToggleButton();
    lName = new javax.swing.JLabel();
    lOutput = new javax.swing.JLabel();
    bEdit = new javax.swing.JButton();
    pbTimer = new javax.swing.JProgressBar();

    setLayout(new java.awt.GridBagLayout());

    tbRun.setText("Run");
    tbRun.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tbRunActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    add(tbRun, gridBagConstraints);

    lName.setText(getRandomizer().getName());
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    add(lName, gridBagConstraints);

    lOutput.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    add(lOutput, gridBagConstraints);

    bEdit.setText("Edit");
    bEdit.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        bEditActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
    add(bEdit, gridBagConstraints);

    pbTimer.setMaximum(countDown.get());
    pbTimer.setValue(countDown.get());
    pbTimer.setStringPainted(true);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    add(pbTimer, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents

  private void tbRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbRunActionPerformed
    if (tbRun.isSelected()) {
      timer.start();
    } else {
      timer.stop();
    }
  }//GEN-LAST:event_tbRunActionPerformed

  private void bEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditActionPerformed
    Main.getInstance().changeRight(getRandomizer());
  }//GEN-LAST:event_bEditActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton bEdit;
  private javax.swing.JLabel lName;
  private javax.swing.JLabel lOutput;
  private javax.swing.JProgressBar pbTimer;
  private javax.swing.JToggleButton tbRun;
  // End of variables declaration//GEN-END:variables
}
