/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.wouter.dndbattle.view.master;

import static java.lang.Integer.MIN_VALUE;

import com.wouter.dndbattle.impl.Master;
import com.wouter.dndbattle.objects.impl.AbstractCharacter;
import com.wouter.dndbattle.objects.impl.Combatant;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author Wouter
 */
public class AddCombatantFrame extends javax.swing.JFrame {

    private static final Logger log = LoggerFactory.getLogger(AddCombatantFrame.class);
    private final Master master;
    private final AbstractCharacter character;

    public AddCombatantFrame(Master master, AbstractCharacter character) {
        this.master = master;
        this.character = character;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lName = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbHealth = new javax.swing.JCheckBox();
        bAdd = new javax.swing.JButton();
        bAddMore = new javax.swing.JButton();
        tfHealth = new javax.swing.JTextField();
        tfInitiative = new javax.swing.JTextField();
        bCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add combatant");

        lName.setText("Name");

        tfName.setText(character.getName());
        tfName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNameActionPerformed(evt);
            }
        });

        jLabel4.setText("Health");

        jLabel5.setText("Initiative (r + dex)");

        cbHealth.setText("Health is not full");
        cbHealth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbHealthActionPerformed(evt);
            }
        });

        bAdd.setText("Add");
        bAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddActionPerformed(evt);
            }
        });

        bAddMore.setText("Add more");
        bAddMore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddMoreActionPerformed(evt);
            }
        });

        tfHealth.setEnabled(false);
        tfHealth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfHealthActionPerformed(evt);
            }
        });

        tfInitiative.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfInitiativeActionPerformed(evt);
            }
        });

        bCancel.setText("Cancel");
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bAddMore))
                    .addComponent(tfInitiative)
                    .addComponent(tfName)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tfHealth)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbHealth)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lName)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfHealth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbHealth))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfInitiative, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bCancel)
                    .addComponent(bAdd)
                    .addComponent(bAddMore))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddActionPerformed
        createCombatant(false);
    }//GEN-LAST:event_bAddActionPerformed

    private void bAddMoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddMoreActionPerformed
        createCombatant(true);
    }//GEN-LAST:event_bAddMoreActionPerformed

    private void cbHealthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbHealthActionPerformed
        tfHealth.setEnabled(cbHealth.isSelected());
    }//GEN-LAST:event_cbHealthActionPerformed

    private void tfNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNameActionPerformed
        createCombatant(true);
    }//GEN-LAST:event_tfNameActionPerformed

    private void tfHealthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfHealthActionPerformed
        createCombatant(true);
    }//GEN-LAST:event_tfHealthActionPerformed

    private void tfInitiativeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfInitiativeActionPerformed
        createCombatant(true);
    }//GEN-LAST:event_tfInitiativeActionPerformed

    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        dispose();
    }//GEN-LAST:event_bCancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAdd;
    private javax.swing.JButton bAddMore;
    private javax.swing.JButton bCancel;
    private javax.swing.JCheckBox cbHealth;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lName;
    private javax.swing.JTextField tfHealth;
    private javax.swing.JTextField tfInitiative;
    private javax.swing.JTextField tfName;
    // End of variables declaration//GEN-END:variables

    private void createCombatant(boolean createMore) {
        String name = tfName.getText();
        int initiative = MIN_VALUE;
        int health = MIN_VALUE;
        try {
            health = cbHealth.isSelected() ? Integer.parseInt(tfHealth.getText()) : character.getMaxHealth();
        } catch (NumberFormatException e) {
            log.warn("Unable to parse input as number.", e);
        }
        try {
            initiative = Integer.parseInt(tfInitiative.getText());
        } catch (NumberFormatException e) {
            log.warn("Unable to parse input as number.", e);
        }
        if (name.isEmpty()) {
            tfName.requestFocus();
            return;
        }
        if (health == MIN_VALUE) {
            if (cbHealth.isSelected()) {
                tfHealth.requestFocus();
                return;
            }
        }
        if (initiative == MIN_VALUE) {
            tfInitiative.requestFocus();
            return;
        }
        Combatant combatant;
        if (health != MIN_VALUE) {
            combatant = new Combatant(character, name, initiative, health);
        } else {
            combatant = new Combatant(character, name, initiative);
        }
        master.addCombatant(combatant);
        if (createMore) {
            CombatantSelectionFrame newFrame = new CombatantSelectionFrame(master);
            newFrame.setLocationRelativeTo(this);
            newFrame.setVisible(true);
        }
        this.dispose();
    }
}
