/*
 * Copyright (C) 2018 Wouter
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.wouter.dndbattle.view.master.utilities;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

import com.wouter.dndbattle.objects.impl.Utility;
import com.wouter.dndbattle.utils.Settings;
import com.wouter.dndbattle.utils.Utilities;
import com.wouter.dndbattle.view.IUpdateablePanel;

/**
 *
 * @author Wouter
 */
public class UtilitiesPanel extends javax.swing.JPanel implements IUpdateablePanel {

    private static final Settings SETTINGS = Settings.getInstance();
    private static final Utilities UTILITIES = Utilities.getInstance();
    private static final String DIVIDER_LOCATION_PROPERTY = "gui.master.presetpanel.armors.deviderlocation";

    public UtilitiesPanel() {
        initComponents();
        update();
    }

    @Override
    public final void update() {
        Utility selection = (Utility) lUtilities.getSelectedValue();

        DefaultListModel<Utility> model = (DefaultListModel<Utility>) lUtilities.getModel();
        model.removeAllElements();

        UTILITIES.getAll().stream().filter((armor) -> (armor instanceof Utility)).forEachOrdered((armor) -> {
            model.addElement((Utility) armor);
        });

        if (selection
                != null) {
            lUtilities.setSelectedValue(selection, true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        spArmors = new javax.swing.JSplitPane();
        pArmorList = new javax.swing.JPanel();
        spUtilitiesList = new javax.swing.JScrollPane();
        lUtilities = new javax.swing.JList<>();
        bNew = new javax.swing.JButton();
        spEdit = new javax.swing.JScrollPane();

        spArmors.setDividerLocation(SETTINGS.getProperty(DIVIDER_LOCATION_PROPERTY, 150));

        pArmorList.setLayout(new java.awt.GridBagLayout());

        lUtilities.setModel(new DefaultListModel<Utility>());
        lUtilities.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lUtilities.setToolTipText("");
        lUtilities.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lUtilitiesValueChanged(evt);
            }
        });
        spUtilitiesList.setViewportView(lUtilities);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        pArmorList.add(spUtilitiesList, gridBagConstraints);

        bNew.setText("New");
        bNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNewActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pArmorList.add(bNew, gridBagConstraints);

        spArmors.setLeftComponent(pArmorList);
        spArmors.setRightComponent(spEdit);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spArmors, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spArmors, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lUtilitiesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lUtilitiesValueChanged
        Utility selection = lUtilities.getSelectedValue();
        if (!evt.getValueIsAdjusting() && selection != null) {
            spEdit.setViewportView(new UtilityPanel(selection, this));
        }
    }//GEN-LAST:event_lUtilitiesValueChanged

    private void bNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNewActionPerformed
        String input = JOptionPane.showInputDialog(this, "Please enter a name for the utility.", "Please enter name", JOptionPane.QUESTION_MESSAGE);
        if (input != null && !input.isEmpty()) {
            Utility utility = new Utility();
            utility.setName(input);
            if (UTILITIES.add(utility)) {
                update();
                lUtilities.setSelectedValue(utility, true);
            }
        }
    }//GEN-LAST:event_bNewActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bNew;
    private javax.swing.JList<Utility> lUtilities;
    private javax.swing.JPanel pArmorList;
    private javax.swing.JSplitPane spArmors;
    private javax.swing.JScrollPane spEdit;
    private javax.swing.JScrollPane spUtilitiesList;
    // End of variables declaration//GEN-END:variables
}
